From 8ee131dd7e7d696e48cd28bd89fb48f33e71d8c0 Mon Sep 17 00:00:00 2001
From: Your Name <Your Email>
Date: Tue, 6 Oct 2015 12:57:01 +0200
Subject: [PATCH 24/27] new-lcd-for-of-wi

---
 arch/arm/boot/dts/imx6dl-ofwi.dts          |   27 +++++++++++++++++++++++
 arch/arm/boot/dts/imx6q-ofwi.dts           |   27 +++++++++++++++++++++++
 drivers/input/touchscreen/atmel_mxt_ts.c   |   30 +++++++++++++++-----------
 drivers/input/touchscreen/st1232.c         |   22 ++++++++++---------
 drivers/video/mxc/mxc_lcdif.c              |   11 ++++++++--
 include/dt-bindings/input/atmel_mxt_ts.h   |   22 +++++++++++++++++++
 include/linux/platform_data/atmel_mxt_ts.h |   32 ++++++++++++++++++++++++++++
 7 files changed, 146 insertions(+), 25 deletions(-)
 create mode 100644 include/dt-bindings/input/atmel_mxt_ts.h
 create mode 100644 include/linux/platform_data/atmel_mxt_ts.h

diff --git a/arch/arm/boot/dts/imx6dl-ofwi.dts b/arch/arm/boot/dts/imx6dl-ofwi.dts
index 6afc7a7..291dd04 100644
--- a/arch/arm/boot/dts/imx6dl-ofwi.dts
+++ b/arch/arm/boot/dts/imx6dl-ofwi.dts
@@ -66,6 +66,21 @@
 		interrupt-parent = <&gpio5>;
 		interrupts = <30 0>;	
 		reset-gpios = <&gpio6 0 1>;
+		// Different setting for Ampire/URT
+		// invert_y = <0>; for Ampire  LCD 
+		// invert_y = <1>; for URT  LCD 
+		invert_y = <0>;
+	};
+
+
+	// New touch 4.3" AVD
+	maxtouch@4a {
+		compatible = "atmel,maxtouch";
+		reg = <0x4a>;
+		pinctrl-names = "default";		
+		pinctrl-0 = <&pinctrl_maxtouch_ts>;
+		interrupt-parent = <&gpio5>;
+		interrupts = <30 0>;	
 	};
 
 	adv7180: adv7180@21 {
@@ -86,10 +101,12 @@
 		cvbs = <1>;
 	};
 	
+	// Optional RTC
 	pcf8563: rtc@51 {
 		compatible = "pcf8563";
 		reg = <0x51>;
 	};
+
 };
 
 &iomuxc {
@@ -106,6 +123,7 @@
 	};
 };
 
+
 &iomuxc {
 	touchpanel{
 		pinctrl_st1232_ts:  st1232-tsgrp  {
@@ -117,3 +135,12 @@
 	};
 };
 
+&iomuxc {
+	touchpanel{
+		pinctrl_maxtouch_ts:  maxtouch-tsgrp  {
+			fsl,pins = <
+				MX6QDL_PAD_CSI0_DAT12__GPIO5_IO30 0x1b0b0 /*interrupt*/ 
+			>;
+		};
+	};
+};
diff --git a/arch/arm/boot/dts/imx6q-ofwi.dts b/arch/arm/boot/dts/imx6q-ofwi.dts
index bedd9e7..d16d6a5 100644
--- a/arch/arm/boot/dts/imx6q-ofwi.dts
+++ b/arch/arm/boot/dts/imx6q-ofwi.dts
@@ -68,6 +68,21 @@
 		interrupt-parent = <&gpio5>;
 		interrupts = <30 0>;	
 		reset-gpios = <&gpio6 0 1>;
+		// Different setting for Ampire/URT
+		// invert_y = <0>; for Ampire  LCD 
+		// invert_y = <1>; for URT  LCD 
+		invert_y = <0>;
+	};
+
+
+	// New touch 4.3" AVD
+	maxtouch@4a {
+		compatible = "atmel,maxtouch";
+		reg = <0x4a>;
+		pinctrl-names = "default";		
+		pinctrl-0 = <&pinctrl_maxtouch_ts>;
+		interrupt-parent = <&gpio5>;
+		interrupts = <30 0>;	
 	};
 
 	adv7180: adv7180@21 {
@@ -88,6 +103,7 @@
 		cvbs = <1>;
 	};
 	
+	// Optional RTC
 	pcf8563: rtc@51 {
 		compatible = "pcf8563";
 		reg = <0x51>;
@@ -109,6 +125,7 @@
 	};
 };
 
+
 &iomuxc {
 	touchpanel{
 		pinctrl_st1232_ts:  st1232-tsgrp  {
@@ -119,3 +136,13 @@
 		};
 	};
 };
+
+&iomuxc {
+	touchpanel{
+		pinctrl_maxtouch_ts:  maxtouch-tsgrp  {
+			fsl,pins = <
+				MX6QDL_PAD_CSI0_DAT12__GPIO5_IO30 0x1b0b0 /*interrupt*/ 
+			>;
+		};
+	};
+};
diff --git a/drivers/input/touchscreen/atmel_mxt_ts.c b/drivers/input/touchscreen/atmel_mxt_ts.c
index a704007..511be9c 100644
--- a/drivers/input/touchscreen/atmel_mxt_ts.c
+++ b/drivers/input/touchscreen/atmel_mxt_ts.c
@@ -2,6 +2,9 @@
  * Atmel maXTouch Touchscreen driver
  *
  * Copyright (C) 2010 Samsung Electronics Co.Ltd
+ * Copyright (C) 2011-2014 Atmel Corporation
+ * Copyright (C) 2012 Google, Inc.
+ *
  * Author: Joonyoung Shim <jy0922.shim@samsung.com>
  *
  * This program is free software; you can redistribute  it and/or modify it
@@ -13,26 +16,25 @@
 
 #include <linux/module.h>
 #include <linux/delay.h>
+#include <linux/completion.h>
 #include <linux/firmware.h>
 #include <linux/i2c.h>
-#include <linux/i2c/atmel_mxt_ts.h>
+#include <linux/platform_data/atmel_mxt_ts.h>
 #include <linux/input/mt.h>
 #include <linux/interrupt.h>
+#include <linux/irq.h>
+#include <linux/of.h>
 #include <linux/slab.h>
+#include <linux/regulator/consumer.h>
+#include <linux/gpio.h>
+#include <linux/workqueue.h>
 
-/* Version */
-#define MXT_VER_20		20
-#define MXT_VER_21		21
-#define MXT_VER_22		22
-
-/* Slave addresses */
-#define MXT_APP_LOW		0x4a
-#define MXT_APP_HIGH		0x4b
-#define MXT_BOOT_LOW		0x24
-#define MXT_BOOT_HIGH		0x25
+#ifdef CONFIG_OF
+#include <linux/of_gpio.h>
+#endif
 
-/* Firmware */
-#define MXT_FW_NAME		"maxtouch.fw"
+/* Configuration file */
+#define MXT_CFG_MAGIC		"OBP_RAW V1"
 
 /* Registers */
 #define MXT_INFO		0x00
@@ -46,6 +48,8 @@
 #define MXT_OBJECT_START	0x07
 
 #define MXT_OBJECT_SIZE		6
+#define MXT_INFO_CHECKSUM_SIZE	3
+#define MXT_MAX_BLOCK_WRITE	255
 
 /* Object types */
 #define MXT_DEBUG_DIAGNOSTIC_T37	37
diff --git a/drivers/input/touchscreen/st1232.c b/drivers/input/touchscreen/st1232.c
index 92855f2..6c339c3 100644
--- a/drivers/input/touchscreen/st1232.c
+++ b/drivers/input/touchscreen/st1232.c
@@ -41,8 +41,6 @@
 #define MAX_AREA	0xff
 #define MAX_FINGERS	2
 
-#define INVERT_Y
-
 struct st1232_ts_finger {
 	u16 x;
 	u16 y;
@@ -55,7 +53,8 @@ struct st1232_ts_data {
 	struct input_dev *input_dev;
 	struct st1232_ts_finger finger[MAX_FINGERS];
 	u16 max_x;
-	u16 max_y;	
+	u16 max_y;
+	u32 invert_y;	
 	struct dev_pm_qos_request low_latency_req;
 	int reset_gpio;
 };
@@ -124,18 +123,16 @@ static int st1232_ts_read_data(struct st1232_ts_data *ts)
 	if (finger[0].is_valid) {
 		finger[0].x = ((buf[2] & 0x0070) << 4) | buf[3];
 		finger[0].y = ((buf[2] & 0x0007) << 8) | buf[4];
-#ifdef INVERT_Y
-		finger[0].y = ts->max_y - finger[0].y;
-#endif
+		if(ts->invert_y)
+			finger[0].y = ts->max_y - finger[0].y;
 		finger[0].t = buf[8];
 	}
 
 	if (finger[1].is_valid) {
 		finger[1].x = ((buf[5] & 0x0070) << 4) | buf[6];
 		finger[1].y = ((buf[5] & 0x0007) << 8) | buf[7];
-#ifdef INVERT_Y
-		finger[1].y = ts->max_y - finger[1].y;
-#endif
+		if(ts->invert_y)
+			finger[1].y = ts->max_y - finger[1].y;
 		finger[1].t = buf[9];
 	}
 
@@ -229,7 +226,12 @@ static int st1232_ts_probe(struct i2c_client *client,
 	if (pdata)
 		ts->reset_gpio = pdata->reset_gpio;
 	else if (client->dev.of_node)
+	{
 		ts->reset_gpio = of_get_gpio(client->dev.of_node, 0);
+		of_property_read_u32(client->dev.of_node, "invert_y",
+				     &ts->invert_y);
+
+	}	
 	else
 		ts->reset_gpio = -ENODEV;
 
@@ -278,7 +280,7 @@ static int st1232_ts_probe(struct i2c_client *client,
 
 	error = devm_request_threaded_irq(&client->dev, client->irq,
 					  NULL, st1232_ts_irq_handler,
-					  IRQF_ONESHOT,
+					  IRQF_TRIGGER_LOW | IRQF_ONESHOT,
 					  client->name, ts);
 	if (error) {
 		dev_err(&client->dev, "Failed to register interrupt\n");
diff --git a/drivers/video/mxc/mxc_lcdif.c b/drivers/video/mxc/mxc_lcdif.c
index e8fb493..a092fa5 100644
--- a/drivers/video/mxc/mxc_lcdif.c
+++ b/drivers/video/mxc/mxc_lcdif.c
@@ -43,11 +43,18 @@ static struct fb_videomode lcdif_modedb[] = {
 	FB_VMODE_NONINTERLACED,
 	0,},
 	{
-	/* 480x272 @ 60 Hz  OPENFRAME 4.3'' */
+	/* 480x272 @ 60 Hz  OPENFRAME C.TOUCH.Wi 4.3'' (Ampire LCD) */
+	"AM480x272" , 60, 480, 272, 100000,  8, 2, 11, 2 ,   35 , 2 ,
+ 	0,
+	FB_VMODE_NONINTERLACED,
+	0,},
+	{
+	/* 480x272 @ 60 Hz  OPENFRAME  C.TOUCH.Wi 4.3'' (URT or AVD LCD) */
 	"URT-8484MD" , 60, 480, 272, 100000,  8, 2, 11, 2 ,   35 , 2 ,
  	FB_SYNC_CLK_LAT_FALL,
 	FB_VMODE_NONINTERLACED,
-	0,}, 	{
+	0,}, 	
+	{
 	 /* URT 640x480 @ 60 Hz OPENFRAME 5.7'' */
 	 "URT-VGA" , 60, 640, 480, 38000, 80, 80, 22, 22, 30, 3,
 	 FB_SYNC_CLK_LAT_FALL,
diff --git a/include/dt-bindings/input/atmel_mxt_ts.h b/include/dt-bindings/input/atmel_mxt_ts.h
new file mode 100644
index 0000000..c763792
--- /dev/null
+++ b/include/dt-bindings/input/atmel_mxt_ts.h
@@ -0,0 +1,22 @@
+/*
+ * Atmel maXTouch Touchscreen driver
+ *
+ * Copyright (C) 2015 Atmel Corporation
+ * Author: Nick Dyer <nick.dyer@itdev.co.uk>
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+#ifndef __DT_BINDINGS_ATMEL_MXT_TS_H
+#define __DT_BINDINGS_ATMEL_MXT_TS_H
+
+enum mxt_suspend_mode {
+	MXT_SUSPEND_DEEP_SLEEP = 0,
+	MXT_SUSPEND_TOUCH_CTRL = 1,
+	MXT_SUSPEND_REGULATOR = 2,
+};
+
+#endif /* __DT_BINDINGS_ATMEL_MXT_TS_H */
diff --git a/include/linux/platform_data/atmel_mxt_ts.h b/include/linux/platform_data/atmel_mxt_ts.h
new file mode 100644
index 0000000..be6fa95
--- /dev/null
+++ b/include/linux/platform_data/atmel_mxt_ts.h
@@ -0,0 +1,32 @@
+/*
+ * Atmel maXTouch Touchscreen driver
+ *
+ * Copyright (C) 2010 Samsung Electronics Co.Ltd
+ * Author: Joonyoung Shim <jy0922.shim@samsung.com>
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General  Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ */
+
+#ifndef __LINUX_PLATFORM_DATA_ATMEL_MXT_TS_H
+#define __LINUX_PLATFORM_DATA_ATMEL_MXT_TS_H
+
+#include <linux/types.h>
+#include <dt-bindings/input/atmel_mxt_ts.h>
+
+/* The platform data for the Atmel maXTouch touchscreen driver */
+struct mxt_platform_data {
+	unsigned long irqflags;
+	u8 t19_num_keys;
+	const unsigned int *t19_keymap;
+	enum mxt_suspend_mode suspend_mode;
+	int t15_num_keys;
+	const unsigned int *t15_keymap;
+	unsigned long gpio_reset;
+	const char *cfg_name;
+	const char *input_name;
+};
+
+#endif /* __LINUX_PLATFORM_DATA_ATMEL_MXT_TS_H */
-- 
1.7.9.5

